def evaluate_expression(expression):
    def precedence(op):
        if op in ('+', '-'):
            return 1
        if op in ('*', '/'):
            return 2
        return 0

    def apply_operation(operators, values):
        right = values.pop()
        left = values.pop()
        op = operators.pop()
        if op == '+':
            values.append(left + right)
        elif op == '-':
            values.append(left - right)
        elif op == '*':
            values.append(left * right)
        elif op == '/':
            values.append(left // right)  # Integer division

    def compute(expression):
        values = []
        operators = []
        i = 0
        while i < len(expression):
            if expression[i].isdigit():
                num = 0
                while i < len(expression) and expression[i].isdigit():
                    num = num * 10 + int(expression[i])
                    i += 1
                values.append(num)
                i -= 1
            elif expression[i] == '(':
                operators.append(expression[i])
            elif expression[i] == ')':
                while operators and operators[-1] != '(':
                    apply_operation(operators, values)
                operators.pop()  # Remove '('
            elif expression[i] in "+-*/":
                while (operators and operators[-1] != '(' and 
                       precedence(operators[-1]) >= precedence(expression[i])):
                    apply_operation(operators, values)
                operators.append(expression[i])
            i += 1

        while operators:
            apply_operation(operators, values)

        return values[-1]

    return compute(expression)


print(evaluate_expression("25+5-(4*5-5)"))
print(evaluate_expression("24-8+9*2-10/5")) 
